=========================== Tour & Travel App Backend Starter Code with Database Connection ===========================
Node.js (Express) + MySQL Version
Folder structure:
tour-travel-app/
├── backend/
│   ├── package.json
│   ├── server.js
│   ├── db.js
│   ├── routes/
│   │   └── health.js
│   └── models/
│       └── Tour.js
package.json:
{
  "name": "tour-travel-backend",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mysql2": "^3.6.0",
    "sequelize": "^6.32.1"
  },
  "devDependencies": {
    "nodemon": "^2.0.22"
  }
}
db.js:
const { Sequelize } = require('sequelize');

const sequelize = new Sequelize('tour_travel_db', 'root', 'password', {
  host: 'localhost',
  dialect: 'mysql',
});

sequelize.authenticate()
  .then(() => console.log('MySQL Database connected successfully.'))
  .catch(err => console.log('Error: ' + err));

module.exports = sequelize;
models/Tour.js:
const { DataTypes } = require('sequelize');
const sequelize = require('../db');

const Tour = sequelize.define('Tour', {
  id: {
    type: DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  name: {
    type: DataTypes.STRING,
    allowNull: false
  },
  location: {
    type: DataTypes.STRING,
    allowNull: false
  },
  price: {
    type: DataTypes.FLOAT,
    allowNull: false
  }
}, {
  tableName: 'tours'
});

sequelize.sync({ force: true })
  .then(() => console.log('Tour table synced.'));

module.exports = Tour;
routes/health.js:
const express = require('express');
const router = express.Router();
const Tour = require('../models/Tour');

router.get('/', async (req, res) => {
  const tours = await Tour.findAll();
  res.json({ status: 'API is running', tours });
});

module.exports = router;
Run MySQL backend:
cd backend
npm install
npm run dev
Test: http://localhost:5000/healthcheck
Node.js (Express) + MongoDB Version
Folder structure:
tour-travel-app/
├── backend/
│   ├── package.json
│   ├── server.js
│   ├── db.js
│   ├── routes/
│   │   └── health.js
│   └── models/
│       └── Tour.js
package.json:
{
  "name": "tour-travel-backend",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mongoose": "^7.6.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.22"
  }
}
db.js:
const mongoose = require('mongoose');

mongoose.connect('mongodb://127.0.0.1:27017/tour_travel_db', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log('MongoDB connected successfully.'))
.catch(err => console.log('MongoDB connection error: ', err));

module.exports = mongoose;
models/Tour.js:
const mongoose = require('../db');

const tourSchema = new mongoose.Schema({
  name: { type: String, required: true },
  location: { type: String, required: true },
  price: { type: Number, required: true }
});

const Tour = mongoose.model('Tour', tourSchema);
module.exports = Tour;
routes/health.js:
const express = require('express');
const router = express.Router();
const Tour = require('../models/Tour');

router.get('/', async (req, res) => {
  const tours = await Tour.find();
  res.json({ status: 'API is running', tours });
});

module.exports = router;
Run MongoDB backend:
cd backend
npm install
npm run dev
Test: http://localhost:5000/healthcheck
